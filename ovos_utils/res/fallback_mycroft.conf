{
  // Definition and documentation of all variables used by mycroft-core.
  //
  // Settings seen here are considered DEFAULT.  Settings can also be
  // overridden at the REMOTE level (set by the user via
  // https://home.mycroft.ai), at the SYSTEM level (typically in the file
  // '/etc/mycroft/mycroft.conf'), or at the USER level (typically in the
  // file '~/.config/mycroft/mycroft.conf').
  //
  // The load order of settings is:
  //   DEFAULT
  //   REMOTE
  //   SYSTEM
  //   USER
  //
  // The Override: comments below indicates where these settings are generally
  // set outside of this file.  The load order is always followed, so an
  // individual systems can still apply changes at the SYSTEM or USER levels.

  // Language used for speech-to-text and text-to-speech.
  // Code is a BCP-47 identifier (https://tools.ietf.org/html/bcp47), lowercased
  // TODO: save unmodified, lowercase upon demand
  "lang": "en-us",

  // Measurement units, either 'metric' or 'english'
  // Override: REMOTE
  "system_unit": "metric",

  // Time format, either 'half' (e.g. "11:37 pm") or 'full' (e.g. "23:37")
  // Override: REMOTE
  "time_format": "half",

  // Date format, either 'MDY' (e.g. "11-29-1978") or 'DMY' (e.g. "29-11-1978")
  // Override: REMOTE
  "date_format": "MDY",

  // Whether to opt in to data collection
  // Override: REMOTE
  "opt_in": false,

  // Play a beep when system begins to listen?
  "confirm_listening": true,

  // File locations of sounds to play for system events
  "sounds": {
    "start_listening": "snd/start_listening.wav",
    "end_listening": "snd/end_listening.wav",
    "acknowledge": "snd/acknowledge.mp3"
  },

  // Mechanism used to play WAV audio files
  // Override: SYSTEM
  "play_wav_cmdline": "aplay %1",

  // Mechanism used to play MP3 audio files
  // Override: SYSTEM
  "play_mp3_cmdline": "mpg123 %1",

  // Mechanism used to play OGG audio files
  // Override: SYSTEM
  "play_ogg_cmdline": "ogg123 -q %1",

  // Location where the system resides
  // NOTE: Although this is set here, an Enclosure can override the value.
  //       For example a mycroft-core running in a car could use the GPS.
  // Override: REMOTE
  "location": {
    "city": {
      "code": "Lawrence",
      "name": "Lawrence",
      "state": {
        "code": "KS",
        "name": "Kansas",
        "country": {
          "code": "US",
          "name": "United States"
        }
      }
    },
    "coordinate": {
      "latitude": 38.971669,
      "longitude": -95.23525
    },
    "timezone": {
      "code": "America/Chicago",
      "name": "Central Standard Time",
      "dstOffset": 3600000,
      "offset": -21600000
    }
  },

  // default to $XDG_DATA_DIRS/mycroft
  // "data_dir": "/opt/mycroft",

  // whenever core needs to cache some files this directory will be used,
  // the main use case is for TTS files to avoid synthesizing the same thing
  // more than once, you may set this to a permanent directory to keep these
  // files across reboots, but be careful with space usage!
  // if not set defaults to "/tmp/mycroft/cache"
  // TIP: use "/dev/shm/mycroft/cache" if you want to keep the cache in RAM
  "cache_path": "/tmp/mycroft/cache",

  # emit mycroft.ready signal when all these conditions are met
  # different setups will have different needs
  # eg, a server does not care about audio
  # pairing -> device is paired
  # internet -> device is connected to the internet - NOT IMPLEMENTED
  # skills -> skills reported ready
  # speech -> stt reported ready
  # audio -> audio playback reported ready
  # gui -> gui websocket reported ready - NOT IMPLEMENTED
  # enclosure -> enclosure/HAL reported ready - NOT IMPLEMENTED
  "ready_settings": ["skills"],

  // General skill values
  "skills": {

    // don't start loading skills until internet is detected
    // this config value is not present in mycroft-core ()internet is required)
    // mycroft-lib expects that some instances will be running fully offline
    "wait_for_internet": false,

    // relative to "data_dir"
    "directory": "skills",

    // used by selene to display skill settings in web interface
    "upload_skill_manifest": false,

    // blacklisted skills to not load
    // NB: This is the basename() of the directory where the skill lives, so if
     // the skill you want to blacklist is in /usr/share/mycroft/skills/mycroft-alarm.mycroftai/
    // then you should write `["mycroft-alarm.mycroftai"]` below.
    "blacklisted_skills": [],

    // priority skills to be loaded first
    "priority_skills": ["mycroft-pairing", "mycroft-volume"],

    // fallback skill configuration
    "fallbacks": {
        // you can add skill_id: priority to override the developer defined
        // priority of those skills, this allows customization
        // of unknown intent handling for default_skills + user preferences
        "fallback_priorities": {
           // "skill_id": 10
        },
        // fallback skill handling has 3 modes of operations:
        // - "accept_all"  # default mycroft-core behavior
        // - "whitelist"  # only call fallback for skills in "fallback_whitelist"
        // - "blacklist"  # only call fallback for skills NOT in "fallback_blacklist"
        "fallback_mode": "accept_all",
        "fallback_whitelist": [],
        "fallback_blacklist": []
    },

    // converse stage configuration
    "converse": {
        // the default number of seconds a skill remains active
        // if the user does not interact with the skill in this timespan it
        // will be deactivated, default 5 minutes (same as mycroft)
        "timeout": 300,
         // override of "skill_timeouts" per skill_id
        "skill_timeouts": {},

        // conversational mode has 3 modes of operations:
        // - "accept_all"  # default mycroft-core behavior
        // - "whitelist"  # only call converse for skills in "converse_whitelist"
        // - "blacklist"  # only call converse for skills NOT in "converse_blacklist"
        "converse_mode": "accept_all",
        "converse_whitelist": [],
        "converse_blacklist": [],

        // converse activation has 4 modes of operations:
        // - "accept_all"  # default mycroft-core behavior, any skill can
        //                 # activate itself unconditionally
        // - "priority"  # skills can only activate themselves if no skill with
        //               # higher priority is active
        // - "whitelist"  # only skills in "converse_whitelist" can activate themselves
        // - "blacklist"  # only skills NOT in converse "converse_blacklist" can activate themselves
        // NOTE: this does not apply for regular skill activation, only to skill
        //       initiated activation requests
        "converse_activation": "accept_all",

        // number of consecutive times a skill is allowed to activate itself
        // per minute, -1 for no limit (default), 0 to disable self-activation
        "max_activations": -1,
        // override of "max_activations" per skill_id
        "skill_activations": {},

        // if false only skills can activate themselves
        // if true any skill can activate any other skill
        "cross_activation": true,

        // if false only skills can deactivate themselves
        // if true any skill can deactivate any other skill
        // NOTE: skill deactivation is not yet implemented
        "cross_deactivation": true,

        // you can add skill_id: priority to override the developer defined
        // priority of those skills, currently there is no api for skills to
        // define their default priority, it is assumed to be 50, the only current
        // canonical source for converse priorities is this setting
        "converse_priorities": {
           // "skill_id": 10
        }
    }

  },

  // system administrators can define different constraints in how configurations are loaded
  // this is a mechanism to require root to change these config options
  "system": {
    // do not allow users to tamper with settings at all
    "disable_user_config": false,
    // do not allow remote backend to tamper with settings at all
    "disable_remote_config": false,
    // protected keys are individual settings that can not be changed at remote/user level
    // nested dictionary keys can be defined with "key1:key2" syntax,
    // eg. {"a": {"b": True, "c": False}}
    // to protect "c" you would enter "a:c" in the section below
    "protected_keys": {
        // NOTE: selene backend expects "opt_in" to be changeable in their web ui
        // that effectively gives them a means to enable spying without your input
        // Mycroft AI can be trusted, but you dont need to anymore!
        // The other keys are not currently populated by the remote backend
        // they are defined for protection against bugs and for future proofing
        // (what if facebook buys mycroft tomorrow?)
        "remote": [
            "enclosure",
            "server",
            "system",
            "websocket",
            "gui_websocket",
            "network_tests",
            "listener:wake_word_upload:disable",
            "skills:upload_skill_manifest",
            "skills:auto_update",
            "skills:priority_skills",
            "skills:blacklisted_skills",
            "opt_in"
        ],
        "user": []
    }
  },

  // Address of the REMOTE server
  "server": {
    "url": "https://api.mycroft.ai",
    "version": "v1",
    "update": false,
    "disabled": true,
    "metrics": false,
    "sync_skill_settings": false
  },

  // The mycroft-core messagebus websocket
  "websocket": {
    "host": "0.0.0.0",
    "port": 8181,
    "route": "/core",
    "ssl": false,
    // in mycroft-core all skills share a bus, this allows malicious skills
    // to manipulate it and affect other skills, this option ensures each skill
    // gets it's own websocket connection
    "shared_connection": true
  },

  // The GUI messagebus websocket.  Once port is created per connected GUI
  "gui_websocket": {
        "host": "0.0.0.0",
        "base_port": 18181,
        "route": "/gui",
        "ssl": false
  },

  // URIs to use for testing network connection.
  "network_tests": {
    "dns_primary": "8.8.8.8",
    "dns_secondary": "8.8.4.4",
    "web_url": "https://www.google.com",
    "ncsi_endpoint": "http://www.msftncsi.com/ncsi.txt",
    "ncsi_expected_text": "Microsoft NCSI"
  },

  // Settings used by the wake-up-word listener
  // Override: REMOTE
  "listener": {
    "sample_rate": 16000,

    // if enabled the noise level is saved to a ipc file, useful for
    // debuging if microphone is working but writes a lot to disk,
    // recommended that you set "ipc_path" to a tmpfs
    "mic_meter_ipc": false,

    // Set 'save_path' to configure the location of files stored if
    // 'record_wake_words' and/or 'save_utterances' are set to 'true'.
    // WARNING: Make sure that user 'mycroft' has write-access on the
    // directory!
    // "save_path": "/tmp",
    // Set 'record_wake_words' to save a copy of wake word triggers
    // as .wav files under: /'save_path'/mycroft_wake_words
    "record_wake_words": false,
    // Set 'save_utterances' to save each sentence sent to STT -- by default
    // they are only kept briefly in-memory.  This can be useful for for
    // debugging or other custom purposes.  Recordings are saved
    // under: /'save_path'/mycroft_utterances/<TIMESTAMP>.wav
    "save_utterances": false,
    "wake_word_upload": {
      "disable": true,
      "url": "https://training.mycroft.ai/precise/upload"
    },

    // Override as SYSTEM or USER to select a specific microphone input instead of
    // the PortAudio default input.
    //   "device_name": "somename",  // can be regex pattern or substring
    //       or
    //   "device_index": 12,

    // Stop listing to the microphone during playback to prevent accidental triggering
    // This is enabled by default, but instances with good microphone noise cancellation
    // can disable this to listen all the time, allowing 'barge in' functionality.
    "mute_during_output" : true,

    // How much (if at all) to 'duck' the speaker output during listening.  A
    // setting of 0.0 will not duck at all.  A 1.0 will completely mute output
    // while in a listening state.  Values in between will lower the volume
    // partially (this is optional behavior, depending on the enclosure).
    "duck_while_listening" : 0.3,

    // In milliseconds
    "phoneme_duration": 120,
    "multiplier": 1.0,
    "energy_ratio": 1.5,

    // DEPRECATED, multiple hotwords are supported now, see "hotwords" section below
    //"wake_word": "hey mycroft",
    //"stand_up_word": "wake up",

    // Settings used by microphone to set recording timeout
    "recording_timeout": 10.0,
    "recording_timeout_with_silence": 3.0,

    // instant listen is an experimental setting, it removes the need for
    // the pause between "hey mycroft" and starting to speak the utterance,
    //however it might slightly downgrade STT accuracy depending on engine used
    "instant_listen": false
  },

  // Settings used for any precise wake words
  "precise": {
    "use_precise": false,
    "dist_url": "https://github.com/MycroftAI/precise-data/raw/dist/{arch}/latest",
    "model_url": "https://raw.githubusercontent.com/MycroftAI/precise-data/models/{wake_word}.tar.gz"
  },

  // Hotword configurations
  "hotwords": {
    "hey mycroft": {
        "module": "ovos-ww-plugin-pocketsphinx",
        "phonemes": "HH EY . M AY K R AO F T",
        "threshold": 1e-90,
        "lang": "en-us",
        "listen": true,
        "sound": "snd/start_listening.wav"
        // Specify custom model via:
        // "local_model_file": "~/.local/share/mycroft/precise/models/something.pb"
        // Precise options:
        // "sensitivity": 0.5,  // Higher = more sensitive
        // "trigger_level": 3   // Higher = more delay & less sensitive
        },

    "wake up": {
        "module": "ovos-ww-plugin-pocketsphinx",
        "phonemes": "W EY K . AH P",
        "threshold": 1e-20,
        "lang": "en-us",
        "wakeup": true
        }
  },

   // DEPRECATED: the concept of enclosure will no longer exist in ovos-core
   // this has been replaced with PHAL
  "enclosure": {
    // Platform name
    // Override: SYSTEM (set by specific enclosures)
    "platform": "OpenVoiceOS",

    // The NTP sync should only forced on Raspberry Pi based devices.
    "ntp_sync_on_boot": false,

    // for backwards compat NTP sync is automatically enabled for
    // ('mycroft_mark_1', 'picroft', 'mycroft_mark_2pi')
    // to disable forced ntp_sync in official mycroft platforms
    // set this to false
    "force_mycroft_ntp": false

  },

  // Level of logs to store, one of  "CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"
  // NOTE: This configuration setting is special and can only be changed in the
  // SYSTEM or USER configuration file, it will not be read if defined in the
  // DEFAULT (here) or in the REMOTE mycroft config.
  // If not defined, the default log level is INFO.
  //"log_level": "INFO",

  // Messagebus types that will NOT be output to logs
  "ignore_logs": ["enclosure.mouth.viseme", "enclosure.mouth.display"],

  // Settings related to remote sessions
  // Overrride: none
  "session": {
    // Time To Live, in seconds
    "ttl": 180
  },

  // Speech to Text parameters
  // Override: REMOTE
  "stt": {
    // Engine.  Options: "mycroft", "google", "wit", "ibm", "kaldi", "bing",
    //                   "houndify", "deepspeech_server", "govivace", "yandex"
    "module": "google"
    // "deepspeech_server": {
    //   "uri": "http://localhost:8080/stt"
    // },
    // "kaldi": {
    //   "uri": "http://localhost:8080/client/dynamic/recognize"
    // },
    //"govivace": {
    //   "uri": "https://services.govivace.com:49149/telephony",
    //   "credential": {
    //      "token": "xxxxx"
    //      }
    //}
  },

  // Text to Speech parameters
  // Override: REMOTE
  "tts": {
    "pulse_duck": false,
    "module": "ovos-tts-plugin-mimic2",
    "fallback_module": "ovos-tts-plugin-mimic"
  },

  "padatious": {
    "intent_cache": "~/.local/share/mycroft/intent_cache",
    "train_delay": 4,
    "single_thread": false,
    "padaos_only": true
  },

  "Audio": {
    "backends": {
      "local": {
        "type": "simple",
        "active": true
      }
    },
    "default-backend": "local"
  },

  "debug": true
}
